import requests, time, vt
from abc import abstractmethod

class AntivirusService:
    def __init__(self, apiKey:str=None):
        self._apiKey = apiKey
        self._session = requests.Session()
        
    @abstractmethod   
    def scan_file(self, file, apiUrl, filename):
        raise NotImplementedError("This method is abstract, subclasses must implement scan_file method.")

class NetAV(AntivirusService):
    def scan_file(self, file, apiUrl, filename:str=None):
        headers = {
            'Content-Type': 'application/octet-stream', 
            'Filename' : filename
        }
        response = self._session.post(url=apiUrl, headers=headers, data=file)
        if response.status_code == 200:
            return response.json()
        else:
            raise ConnectionError("Oops! Something went wrong. Error code"+\
                str(response.status_code)+".")
        
class VirusTotal(AntivirusService):
    def scan_file(self, file):
        with vt.Client(self._apiKey, trust_env=True) as client:
            analysis = client.scan_file(file)
            apiUrl = "https://www.virustotal.com/api/v3/analyses"
            get_url = (apiUrl + "/{}").format(analysis.id)
            result = client.get_json(get_url)
            while(not result["data"]["attributes"]["results"]):
                time.sleep(5)
                result = client.get_json(get_url)
        return result

    
class MetaDefender(AntivirusService):
    def scan_file(self, file, filename:str=None):
        headers = {
            "apikey": self._apiKey,
            "Content-Type": "application/octet-stream",
            "filename" : filename
        }
        apiUrl = "https://api.metadefender.com/v4/file"
        response = self._session.post(apiUrl, headers=headers, data=file)
        if response.status_code != 200:
            raise ConnectionError("Oops! Something went wrong. Error code" + \
                str(response.status_code)+".")    
        dataId = response.json()["data_id"]
        resultUrl = (apiUrl + "/{}").format(dataId)
        headers = {
            "apikey": self._apiKey,
            "x-file-metadata": "1"
        }
        response = self._session.get(resultUrl, headers=headers)
        if response.status_code != 200:
            raise ConnectionError("Oops! Something went wrong. Error code" + \
                str(response.status_code)+".")
        while(not response.json()["scan_results"]["total_avs"]):
                response = self._session.get(resultUrl, headers=headers)
                if response.status_code != 200:
                    raise ConnectionError("Oops! Something went wrong. Error code" + \
                        str(response.status_code)+".") 
        return response.json()